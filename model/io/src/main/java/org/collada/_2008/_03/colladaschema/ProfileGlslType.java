//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.27 at 09:08:35 PM MESZ 
//


package org.collada._2008._03.colladaschema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * 
 * 			Opens a block of GLSL platform-specific data types and technique declarations.
 * 			
 * 
 * <p>Java class for profile_glsl_type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="profile_glsl_type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="asset" type="{http://www.collada.org/2008/03/COLLADASchema}asset_type" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="code" type="{http://www.collada.org/2008/03/COLLADASchema}fx_code_type"/>
 *           &lt;element name="include" type="{http://www.collada.org/2008/03/COLLADASchema}fx_include_type"/>
 *         &lt;/choice>
 *         &lt;element name="newparam" type="{http://www.collada.org/2008/03/COLLADASchema}glsl_newparam_type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="technique" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="asset" type="{http://www.collada.org/2008/03/COLLADASchema}asset_type" minOccurs="0"/>
 *                   &lt;element name="annotate" type="{http://www.collada.org/2008/03/COLLADASchema}fx_annotate_type" maxOccurs="unbounded" minOccurs="0"/>
 *                   &lt;element name="pass" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="annotate" type="{http://www.collada.org/2008/03/COLLADASchema}fx_annotate_type" maxOccurs="unbounded" minOccurs="0"/>
 *                             &lt;element name="states" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;group ref="{http://www.collada.org/2008/03/COLLADASchema}gl_pipeline_settings_group" maxOccurs="unbounded" minOccurs="0"/>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="program" type="{http://www.collada.org/2008/03/COLLADASchema}glsl_program_type" minOccurs="0"/>
 *                             &lt;element name="evaluate" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;element name="color_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_colortarget_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="depth_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_depthtarget_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="stencil_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_stenciltarget_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="color_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearcolor_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="depth_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_cleardepth_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="stencil_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearstencil_type" maxOccurs="unbounded" minOccurs="0"/>
 *                                       &lt;element name="draw" type="{http://www.collada.org/2008/03/COLLADASchema}fx_draw_type" minOccurs="0"/>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
 *                           &lt;/sequence>
 *                           &lt;attribute name="sid" type="{http://www.collada.org/2008/03/COLLADASchema}sid_type" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
 *                 &lt;/sequence>
 *                 &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="sid" use="required" type="{http://www.collada.org/2008/03/COLLADASchema}sid_type" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       &lt;attribute name="platform" type="{http://www.w3.org/2001/XMLSchema}NCName" default="PC" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "profile_glsl_type", propOrder = {
    "asset",
    "codeOrInclude",
    "newparam",
    "technique",
    "extra"
})
public class ProfileGlslType {

    protected AssetType asset;
    @XmlElements({
        @XmlElement(name = "code", type = FxCodeType.class),
        @XmlElement(name = "include", type = FxIncludeType.class)
    })
    protected List<Object> codeOrInclude;
    protected List<GlslNewparamType> newparam;
    @XmlElement(required = true)
    protected List<ProfileGlslType.Technique> technique;
    protected List<ExtraType> extra;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String platform;

    /**
     * Gets the value of the asset property.
     * 
     * @return
     *     possible object is
     *     {@link AssetType }
     *     
     */
    public AssetType getAsset() {
        return asset;
    }

    /**
     * Sets the value of the asset property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssetType }
     *     
     */
    public void setAsset(AssetType value) {
        this.asset = value;
    }

    /**
     * Gets the value of the codeOrInclude property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the codeOrInclude property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCodeOrInclude().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FxCodeType }
     * {@link FxIncludeType }
     * 
     * 
     */
    public List<Object> getCodeOrInclude() {
        if (codeOrInclude == null) {
            codeOrInclude = new ArrayList<Object>();
        }
        return this.codeOrInclude;
    }

    /**
     * Gets the value of the newparam property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the newparam property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNewparam().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GlslNewparamType }
     * 
     * 
     */
    public List<GlslNewparamType> getNewparam() {
        if (newparam == null) {
            newparam = new ArrayList<GlslNewparamType>();
        }
        return this.newparam;
    }

    /**
     * Gets the value of the technique property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the technique property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTechnique().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProfileGlslType.Technique }
     * 
     * 
     */
    public List<ProfileGlslType.Technique> getTechnique() {
        if (technique == null) {
            technique = new ArrayList<ProfileGlslType.Technique>();
        }
        return this.technique;
    }

    /**
     * Gets the value of the extra property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extra property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtra().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExtraType }
     * 
     * 
     */
    public List<ExtraType> getExtra() {
        if (extra == null) {
            extra = new ArrayList<ExtraType>();
        }
        return this.extra;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the platform property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPlatform() {
        if (platform == null) {
            return "PC";
        } else {
            return platform;
        }
    }

    /**
     * Sets the value of the platform property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPlatform(String value) {
        this.platform = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="asset" type="{http://www.collada.org/2008/03/COLLADASchema}asset_type" minOccurs="0"/>
     *         &lt;element name="annotate" type="{http://www.collada.org/2008/03/COLLADASchema}fx_annotate_type" maxOccurs="unbounded" minOccurs="0"/>
     *         &lt;element name="pass" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="annotate" type="{http://www.collada.org/2008/03/COLLADASchema}fx_annotate_type" maxOccurs="unbounded" minOccurs="0"/>
     *                   &lt;element name="states" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;group ref="{http://www.collada.org/2008/03/COLLADASchema}gl_pipeline_settings_group" maxOccurs="unbounded" minOccurs="0"/>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="program" type="{http://www.collada.org/2008/03/COLLADASchema}glsl_program_type" minOccurs="0"/>
     *                   &lt;element name="evaluate" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="color_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_colortarget_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="depth_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_depthtarget_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="stencil_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_stenciltarget_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="color_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearcolor_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="depth_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_cleardepth_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="stencil_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearstencil_type" maxOccurs="unbounded" minOccurs="0"/>
     *                             &lt;element name="draw" type="{http://www.collada.org/2008/03/COLLADASchema}fx_draw_type" minOccurs="0"/>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *                 &lt;attribute name="sid" type="{http://www.collada.org/2008/03/COLLADASchema}sid_type" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *       &lt;attribute name="sid" use="required" type="{http://www.collada.org/2008/03/COLLADASchema}sid_type" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "asset",
        "annotate",
        "pass",
        "extra"
    })
    public static class Technique {

        protected AssetType asset;
        protected List<FxAnnotateType> annotate;
        @XmlElement(required = true)
        protected List<ProfileGlslType.Technique.Pass> pass;
        protected List<ExtraType> extra;
        @XmlAttribute
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;
        @XmlAttribute(required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String sid;

        /**
         * Gets the value of the asset property.
         * 
         * @return
         *     possible object is
         *     {@link AssetType }
         *     
         */
        public AssetType getAsset() {
            return asset;
        }

        /**
         * Sets the value of the asset property.
         * 
         * @param value
         *     allowed object is
         *     {@link AssetType }
         *     
         */
        public void setAsset(AssetType value) {
            this.asset = value;
        }

        /**
         * Gets the value of the annotate property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the annotate property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAnnotate().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FxAnnotateType }
         * 
         * 
         */
        public List<FxAnnotateType> getAnnotate() {
            if (annotate == null) {
                annotate = new ArrayList<FxAnnotateType>();
            }
            return this.annotate;
        }

        /**
         * Gets the value of the pass property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the pass property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getPass().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ProfileGlslType.Technique.Pass }
         * 
         * 
         */
        public List<ProfileGlslType.Technique.Pass> getPass() {
            if (pass == null) {
                pass = new ArrayList<ProfileGlslType.Technique.Pass>();
            }
            return this.pass;
        }

        /**
         * Gets the value of the extra property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the extra property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getExtra().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ExtraType }
         * 
         * 
         */
        public List<ExtraType> getExtra() {
            if (extra == null) {
                extra = new ArrayList<ExtraType>();
            }
            return this.extra;
        }

        /**
         * Gets the value of the id property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getId() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setId(String value) {
            this.id = value;
        }

        /**
         * Gets the value of the sid property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSid() {
            return sid;
        }

        /**
         * Sets the value of the sid property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSid(String value) {
            this.sid = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="annotate" type="{http://www.collada.org/2008/03/COLLADASchema}fx_annotate_type" maxOccurs="unbounded" minOccurs="0"/>
         *         &lt;element name="states" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;group ref="{http://www.collada.org/2008/03/COLLADASchema}gl_pipeline_settings_group" maxOccurs="unbounded" minOccurs="0"/>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="program" type="{http://www.collada.org/2008/03/COLLADASchema}glsl_program_type" minOccurs="0"/>
         *         &lt;element name="evaluate" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="color_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_colortarget_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="depth_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_depthtarget_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="stencil_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_stenciltarget_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="color_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearcolor_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="depth_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_cleardepth_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="stencil_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearstencil_type" maxOccurs="unbounded" minOccurs="0"/>
         *                   &lt;element name="draw" type="{http://www.collada.org/2008/03/COLLADASchema}fx_draw_type" minOccurs="0"/>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="extra" type="{http://www.collada.org/2008/03/COLLADASchema}extra_type" maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *       &lt;attribute name="sid" type="{http://www.collada.org/2008/03/COLLADASchema}sid_type" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "annotate",
            "states",
            "program",
            "evaluate",
            "extra"
        })
        public static class Pass {

            protected List<FxAnnotateType> annotate;
            protected ProfileGlslType.Technique.Pass.States states;
            protected GlslProgramType program;
            protected ProfileGlslType.Technique.Pass.Evaluate evaluate;
            protected List<ExtraType> extra;
            @XmlAttribute
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String sid;

            /**
             * Gets the value of the annotate property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the annotate property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAnnotate().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link FxAnnotateType }
             * 
             * 
             */
            public List<FxAnnotateType> getAnnotate() {
                if (annotate == null) {
                    annotate = new ArrayList<FxAnnotateType>();
                }
                return this.annotate;
            }

            /**
             * Gets the value of the states property.
             * 
             * @return
             *     possible object is
             *     {@link ProfileGlslType.Technique.Pass.States }
             *     
             */
            public ProfileGlslType.Technique.Pass.States getStates() {
                return states;
            }

            /**
             * Sets the value of the states property.
             * 
             * @param value
             *     allowed object is
             *     {@link ProfileGlslType.Technique.Pass.States }
             *     
             */
            public void setStates(ProfileGlslType.Technique.Pass.States value) {
                this.states = value;
            }

            /**
             * Gets the value of the program property.
             * 
             * @return
             *     possible object is
             *     {@link GlslProgramType }
             *     
             */
            public GlslProgramType getProgram() {
                return program;
            }

            /**
             * Sets the value of the program property.
             * 
             * @param value
             *     allowed object is
             *     {@link GlslProgramType }
             *     
             */
            public void setProgram(GlslProgramType value) {
                this.program = value;
            }

            /**
             * Gets the value of the evaluate property.
             * 
             * @return
             *     possible object is
             *     {@link ProfileGlslType.Technique.Pass.Evaluate }
             *     
             */
            public ProfileGlslType.Technique.Pass.Evaluate getEvaluate() {
                return evaluate;
            }

            /**
             * Sets the value of the evaluate property.
             * 
             * @param value
             *     allowed object is
             *     {@link ProfileGlslType.Technique.Pass.Evaluate }
             *     
             */
            public void setEvaluate(ProfileGlslType.Technique.Pass.Evaluate value) {
                this.evaluate = value;
            }

            /**
             * Gets the value of the extra property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the extra property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getExtra().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link ExtraType }
             * 
             * 
             */
            public List<ExtraType> getExtra() {
                if (extra == null) {
                    extra = new ArrayList<ExtraType>();
                }
                return this.extra;
            }

            /**
             * Gets the value of the sid property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSid() {
                return sid;
            }

            /**
             * Sets the value of the sid property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSid(String value) {
                this.sid = value;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="color_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_colortarget_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="depth_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_depthtarget_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="stencil_target" type="{http://www.collada.org/2008/03/COLLADASchema}fx_stenciltarget_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="color_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearcolor_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="depth_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_cleardepth_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="stencil_clear" type="{http://www.collada.org/2008/03/COLLADASchema}fx_clearstencil_type" maxOccurs="unbounded" minOccurs="0"/>
             *         &lt;element name="draw" type="{http://www.collada.org/2008/03/COLLADASchema}fx_draw_type" minOccurs="0"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "colorTarget",
                "depthTarget",
                "stencilTarget",
                "colorClear",
                "depthClear",
                "stencilClear",
                "draw"
            })
            public static class Evaluate {

                @XmlElement(name = "color_target")
                protected List<FxColortargetType> colorTarget;
                @XmlElement(name = "depth_target")
                protected List<FxDepthtargetType> depthTarget;
                @XmlElement(name = "stencil_target")
                protected List<FxStenciltargetType> stencilTarget;
                @XmlElement(name = "color_clear")
                protected List<FxClearcolorType> colorClear;
                @XmlElement(name = "depth_clear")
                protected List<FxCleardepthType> depthClear;
                @XmlElement(name = "stencil_clear")
                protected List<FxClearstencilType> stencilClear;
                protected String draw;

                /**
                 * Gets the value of the colorTarget property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the colorTarget property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getColorTarget().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxColortargetType }
                 * 
                 * 
                 */
                public List<FxColortargetType> getColorTarget() {
                    if (colorTarget == null) {
                        colorTarget = new ArrayList<FxColortargetType>();
                    }
                    return this.colorTarget;
                }

                /**
                 * Gets the value of the depthTarget property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the depthTarget property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getDepthTarget().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxDepthtargetType }
                 * 
                 * 
                 */
                public List<FxDepthtargetType> getDepthTarget() {
                    if (depthTarget == null) {
                        depthTarget = new ArrayList<FxDepthtargetType>();
                    }
                    return this.depthTarget;
                }

                /**
                 * Gets the value of the stencilTarget property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the stencilTarget property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getStencilTarget().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxStenciltargetType }
                 * 
                 * 
                 */
                public List<FxStenciltargetType> getStencilTarget() {
                    if (stencilTarget == null) {
                        stencilTarget = new ArrayList<FxStenciltargetType>();
                    }
                    return this.stencilTarget;
                }

                /**
                 * Gets the value of the colorClear property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the colorClear property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getColorClear().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxClearcolorType }
                 * 
                 * 
                 */
                public List<FxClearcolorType> getColorClear() {
                    if (colorClear == null) {
                        colorClear = new ArrayList<FxClearcolorType>();
                    }
                    return this.colorClear;
                }

                /**
                 * Gets the value of the depthClear property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the depthClear property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getDepthClear().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxCleardepthType }
                 * 
                 * 
                 */
                public List<FxCleardepthType> getDepthClear() {
                    if (depthClear == null) {
                        depthClear = new ArrayList<FxCleardepthType>();
                    }
                    return this.depthClear;
                }

                /**
                 * Gets the value of the stencilClear property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the stencilClear property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getStencilClear().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link FxClearstencilType }
                 * 
                 * 
                 */
                public List<FxClearstencilType> getStencilClear() {
                    if (stencilClear == null) {
                        stencilClear = new ArrayList<FxClearstencilType>();
                    }
                    return this.stencilClear;
                }

                /**
                 * Gets the value of the draw property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getDraw() {
                    return draw;
                }

                /**
                 * Sets the value of the draw property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setDraw(String value) {
                    this.draw = value;
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;group ref="{http://www.collada.org/2008/03/COLLADASchema}gl_pipeline_settings_group" maxOccurs="unbounded" minOccurs="0"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "glPipelineSettingsGroup"
            })
            public static class States {

                @XmlElements({
                    @XmlElement(name = "light_linear_attenuation", type = org.collada._2008._03.colladaschema.CgPassType.States.LightLinearAttenuation.class),
                    @XmlElement(name = "texture3D", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture3D.class),
                    @XmlElement(name = "light_spot_exponent", type = org.collada._2008._03.colladaschema.CgPassType.States.LightSpotExponent.class),
                    @XmlElement(name = "light_position", type = org.collada._2008._03.colladaschema.CgPassType.States.LightPosition.class),
                    @XmlElement(name = "logic_op_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LogicOpEnable.class),
                    @XmlElement(name = "line_stipple", type = org.collada._2008._03.colladaschema.CgPassType.States.LineStipple.class),
                    @XmlElement(name = "point_size_min", type = org.collada._2008._03.colladaschema.CgPassType.States.PointSizeMin.class),
                    @XmlElement(name = "color_logic_op_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.ColorLogicOpEnable.class),
                    @XmlElement(name = "light_constant_attenuation", type = org.collada._2008._03.colladaschema.CgPassType.States.LightConstantAttenuation.class),
                    @XmlElement(name = "sample_alpha_to_one_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.SampleAlphaToOneEnable.class),
                    @XmlElement(name = "fog_start", type = org.collada._2008._03.colladaschema.CgPassType.States.FogStart.class),
                    @XmlElement(name = "textureCUBE_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureCUBEEnable.class),
                    @XmlElement(name = "line_width", type = org.collada._2008._03.colladaschema.CgPassType.States.LineWidth.class),
                    @XmlElement(name = "fog_coord_src", type = org.collada._2008._03.colladaschema.CgPassType.States.FogCoordSrc.class),
                    @XmlElement(name = "stencil_func_separate", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilFuncSeparate.class),
                    @XmlElement(name = "depth_test_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthTestEnable.class),
                    @XmlElement(name = "alpha_func", type = org.collada._2008._03.colladaschema.CgPassType.States.AlphaFunc.class),
                    @XmlElement(name = "material_ambient", type = org.collada._2008._03.colladaschema.CgPassType.States.MaterialAmbient.class),
                    @XmlElement(name = "fog_mode", type = org.collada._2008._03.colladaschema.CgPassType.States.FogMode.class),
                    @XmlElement(name = "light_ambient", type = org.collada._2008._03.colladaschema.CgPassType.States.LightAmbient.class),
                    @XmlElement(name = "clip_plane_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.ClipPlaneEnable.class),
                    @XmlElement(name = "line_stipple_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LineStippleEnable.class),
                    @XmlElement(name = "textureDEPTH_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureDEPTHEnable.class),
                    @XmlElement(name = "model_view_matrix", type = org.collada._2008._03.colladaschema.CgPassType.States.ModelViewMatrix.class),
                    @XmlElement(name = "polygon_offset_line_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetLineEnable.class),
                    @XmlElement(name = "cull_face_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.CullFaceEnable.class),
                    @XmlElement(name = "texture_env_mode", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureEnvMode.class),
                    @XmlElement(name = "light_spot_direction", type = org.collada._2008._03.colladaschema.CgPassType.States.LightSpotDirection.class),
                    @XmlElement(name = "cull_face", type = org.collada._2008._03.colladaschema.CgPassType.States.CullFace.class),
                    @XmlElement(name = "depth_clamp_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthClampEnable.class),
                    @XmlElement(name = "texture_env_color", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureEnvColor.class),
                    @XmlElement(name = "point_size", type = org.collada._2008._03.colladaschema.CgPassType.States.PointSize.class),
                    @XmlElement(name = "blend_func_separate", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendFuncSeparate.class),
                    @XmlElement(name = "depth_mask", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthMask.class),
                    @XmlElement(name = "fog_density", type = org.collada._2008._03.colladaschema.CgPassType.States.FogDensity.class),
                    @XmlElement(name = "fog_end", type = org.collada._2008._03.colladaschema.CgPassType.States.FogEnd.class),
                    @XmlElement(name = "point_distance_attenuation", type = org.collada._2008._03.colladaschema.CgPassType.States.PointDistanceAttenuation.class),
                    @XmlElement(name = "color_material_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.ColorMaterialEnable.class),
                    @XmlElement(name = "point_smooth_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PointSmoothEnable.class),
                    @XmlElement(name = "fog_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.FogEnable.class),
                    @XmlElement(name = "stencil_op", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilOp.class),
                    @XmlElement(name = "rescale_normal_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.RescaleNormalEnable.class),
                    @XmlElement(name = "alpha_test_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.AlphaTestEnable.class),
                    @XmlElement(name = "sample_alpha_to_coverage_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.SampleAlphaToCoverageEnable.class),
                    @XmlElement(name = "fog_color", type = org.collada._2008._03.colladaschema.CgPassType.States.FogColor.class),
                    @XmlElement(name = "line_smooth_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LineSmoothEnable.class),
                    @XmlElement(name = "textureRECT", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureRECT.class),
                    @XmlElement(name = "stencil_mask", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilMask.class),
                    @XmlElement(name = "light_model_two_side_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LightModelTwoSideEnable.class),
                    @XmlElement(name = "point_size_max", type = org.collada._2008._03.colladaschema.CgPassType.States.PointSizeMax.class),
                    @XmlElement(name = "blend_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendEnable.class),
                    @XmlElement(name = "texture2D", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture2D.class),
                    @XmlElement(name = "depth_bounds_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthBoundsEnable.class),
                    @XmlElement(name = "scissor_test_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.ScissorTestEnable.class),
                    @XmlElement(name = "projection_matrix", type = org.collada._2008._03.colladaschema.CgPassType.States.ProjectionMatrix.class),
                    @XmlElement(name = "blend_func", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendFunc.class),
                    @XmlElement(name = "light_model_ambient", type = org.collada._2008._03.colladaschema.CgPassType.States.LightModelAmbient.class),
                    @XmlElement(name = "material_diffuse", type = org.collada._2008._03.colladaschema.CgPassType.States.MaterialDiffuse.class),
                    @XmlElement(name = "sample_coverage_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.SampleCoverageEnable.class),
                    @XmlElement(name = "texture1D", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture1D.class),
                    @XmlElement(name = "stencil_op_separate", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilOpSeparate.class),
                    @XmlElement(name = "material_shininess", type = org.collada._2008._03.colladaschema.CgPassType.States.MaterialShininess.class),
                    @XmlElement(name = "blend_color", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendColor.class),
                    @XmlElement(name = "color_mask", type = org.collada._2008._03.colladaschema.CgPassType.States.ColorMask.class),
                    @XmlElement(name = "color_material", type = org.collada._2008._03.colladaschema.CgPassType.States.ColorMaterial.class),
                    @XmlElement(name = "normalize_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.NormalizeEnable.class),
                    @XmlElement(name = "logic_op", type = org.collada._2008._03.colladaschema.CgPassType.States.LogicOp.class),
                    @XmlElement(name = "blend_equation_separate", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendEquationSeparate.class),
                    @XmlElement(name = "light_specular", type = org.collada._2008._03.colladaschema.CgPassType.States.LightSpecular.class),
                    @XmlElement(name = "front_face", type = org.collada._2008._03.colladaschema.CgPassType.States.FrontFace.class),
                    @XmlElement(name = "textureDEPTH", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureDEPTH.class),
                    @XmlElement(name = "dither_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.DitherEnable.class),
                    @XmlElement(name = "polygon_offset_fill_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetFillEnable.class),
                    @XmlElement(name = "light_spot_cutoff", type = org.collada._2008._03.colladaschema.CgPassType.States.LightSpotCutoff.class),
                    @XmlElement(name = "depth_func", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthFunc.class),
                    @XmlElement(name = "material_emission", type = org.collada._2008._03.colladaschema.CgPassType.States.MaterialEmission.class),
                    @XmlElement(name = "texture2D_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture2DEnable.class),
                    @XmlElement(name = "depth_range", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthRange.class),
                    @XmlElement(name = "polygon_smooth_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonSmoothEnable.class),
                    @XmlElement(name = "texture1D_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture1DEnable.class),
                    @XmlElement(name = "light_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LightEnable.class),
                    @XmlElement(name = "light_model_local_viewer_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LightModelLocalViewerEnable.class),
                    @XmlElement(name = "light_diffuse", type = org.collada._2008._03.colladaschema.CgPassType.States.LightDiffuse.class),
                    @XmlElement(name = "shade_model", type = org.collada._2008._03.colladaschema.CgPassType.States.ShadeModel.class),
                    @XmlElement(name = "blend_equation", type = org.collada._2008._03.colladaschema.CgPassType.States.BlendEquation.class),
                    @XmlElement(name = "clip_plane", type = org.collada._2008._03.colladaschema.CgPassType.States.ClipPlane.class),
                    @XmlElement(name = "material_specular", type = org.collada._2008._03.colladaschema.CgPassType.States.MaterialSpecular.class),
                    @XmlElement(name = "textureCUBE", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureCUBE.class),
                    @XmlElement(name = "stencil_func", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilFunc.class),
                    @XmlElement(name = "textureRECT_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.TextureRECTEnable.class),
                    @XmlElement(name = "polygon_stipple_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonStippleEnable.class),
                    @XmlElement(name = "texture3D_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.Texture3DEnable.class),
                    @XmlElement(name = "scissor", type = org.collada._2008._03.colladaschema.CgPassType.States.Scissor.class),
                    @XmlElement(name = "light_model_color_control", type = org.collada._2008._03.colladaschema.CgPassType.States.LightModelColorControl.class),
                    @XmlElement(name = "stencil_mask_separate", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilMaskSeparate.class),
                    @XmlElement(name = "light_quadratic_attenuation", type = org.collada._2008._03.colladaschema.CgPassType.States.LightQuadraticAttenuation.class),
                    @XmlElement(name = "stencil_test_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.StencilTestEnable.class),
                    @XmlElement(name = "point_fade_threshold_size", type = org.collada._2008._03.colladaschema.CgPassType.States.PointFadeThresholdSize.class),
                    @XmlElement(name = "multisample_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.MultisampleEnable.class),
                    @XmlElement(name = "polygon_mode", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonMode.class),
                    @XmlElement(name = "polygon_offset_point_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetPointEnable.class),
                    @XmlElement(name = "depth_bounds", type = org.collada._2008._03.colladaschema.CgPassType.States.DepthBounds.class),
                    @XmlElement(name = "lighting_enable", type = org.collada._2008._03.colladaschema.CgPassType.States.LightingEnable.class),
                    @XmlElement(name = "polygon_offset", type = org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffset.class)
                })
                protected List<Object> glPipelineSettingsGroup;

                /**
                 * Gets the value of the glPipelineSettingsGroup property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the glPipelineSettingsGroup property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getGlPipelineSettingsGroup().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightLinearAttenuation }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture3D }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightSpotExponent }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightPosition }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LogicOpEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LineStipple }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointSizeMin }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ColorLogicOpEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightConstantAttenuation }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.SampleAlphaToOneEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogStart }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureCUBEEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LineWidth }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogCoordSrc }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilFuncSeparate }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthTestEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.AlphaFunc }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MaterialAmbient }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogMode }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightAmbient }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ClipPlaneEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LineStippleEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureDEPTHEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ModelViewMatrix }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetLineEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.CullFaceEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureEnvMode }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightSpotDirection }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.CullFace }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthClampEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureEnvColor }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointSize }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendFuncSeparate }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthMask }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogDensity }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogEnd }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointDistanceAttenuation }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ColorMaterialEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointSmoothEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilOp }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.RescaleNormalEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.AlphaTestEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.SampleAlphaToCoverageEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FogColor }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LineSmoothEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureRECT }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilMask }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightModelTwoSideEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointSizeMax }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture2D }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthBoundsEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ScissorTestEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ProjectionMatrix }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendFunc }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightModelAmbient }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MaterialDiffuse }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.SampleCoverageEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture1D }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilOpSeparate }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MaterialShininess }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendColor }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ColorMask }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ColorMaterial }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.NormalizeEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LogicOp }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendEquationSeparate }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightSpecular }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.FrontFace }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureDEPTH }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DitherEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetFillEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightSpotCutoff }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthFunc }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MaterialEmission }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture2DEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthRange }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonSmoothEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture1DEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightModelLocalViewerEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightDiffuse }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ShadeModel }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.BlendEquation }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.ClipPlane }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MaterialSpecular }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureCUBE }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilFunc }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.TextureRECTEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonStippleEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Texture3DEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.Scissor }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightModelColorControl }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilMaskSeparate }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightQuadraticAttenuation }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.StencilTestEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PointFadeThresholdSize }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.MultisampleEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonMode }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffsetPointEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.DepthBounds }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.LightingEnable }
                 * {@link org.collada._2008._03.colladaschema.CgPassType.States.PolygonOffset }
                 * 
                 * 
                 */
                public List<Object> getGlPipelineSettingsGroup() {
                    if (glPipelineSettingsGroup == null) {
                        glPipelineSettingsGroup = new ArrayList<Object>();
                    }
                    return this.glPipelineSettingsGroup;
                }

            }

        }

    }

}
